[{"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\layout.js":"3","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\header.js":"4","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\sidebar.js":"5","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\signUp.js":"6","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\homepage.js":"7","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\form.js":"8","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\input.js":"9","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\button.js":"10","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\loader.js":"11","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\store.js":"12","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\signIn.js":"13","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Reducers\\userReducers.js":"14","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Types\\userTypes.js":"15","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Actions\\userActions.js":"16","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\dashboard.js":"17","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\editProfilePage.js":"18","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Reducers\\followerReducer.js":"19","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Types\\followerTypes.js":"20","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Actions\\followersAction.js":"21","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\upload.js":"22","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Reducers\\uploadReducer.js":"23","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Types\\uploadTypes.js":"24","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Actions\\uploadActions.js":"25","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\postTemplate.js":"26","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\modal.js":"27","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\errorMessage.js":"28","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\uploaderProfileBar.js":"29","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\followersTab.js":"30","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\followOrEditCheck.js":"31","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\richTextEditor.js":"32","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Reducers\\savedUploadsReducer.js":"33","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Types\\savedUploadTypes.js":"34","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\savePostButton.js":"35","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Actions\\saveUploadsActions.js":"36","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\paddingWrapper.js":"37","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\editUpload.js":"38","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\dashboardPosts.js":"39","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\dashboardProfilePicture.js":"40","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\removeProfilePictureButton.js":"41","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Reducers\\likedUploadsReducer.js":"42","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Types\\likedUploads.js":"43","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\likePostButton.js":"44","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Actions\\likeUploadAction.js":"45"},{"size":292,"mtime":1611532026294,"results":"46","hashOfConfig":"47"},{"size":996,"mtime":1612808789040,"results":"48","hashOfConfig":"47"},{"size":450,"mtime":1611687617537,"results":"49","hashOfConfig":"47"},{"size":7295,"mtime":1613057799777,"results":"50","hashOfConfig":"47"},{"size":1783,"mtime":1611579768881,"results":"51","hashOfConfig":"47"},{"size":3815,"mtime":1612963726573,"results":"52","hashOfConfig":"47"},{"size":4598,"mtime":1613067982974,"results":"53","hashOfConfig":"47"},{"size":319,"mtime":1611521127192,"results":"54","hashOfConfig":"47"},{"size":513,"mtime":1612484560999,"results":"55","hashOfConfig":"47"},{"size":297,"mtime":1612878682975,"results":"56","hashOfConfig":"47"},{"size":524,"mtime":1611521404202,"results":"57","hashOfConfig":"47"},{"size":2195,"mtime":1613068366261,"results":"58","hashOfConfig":"47"},{"size":2254,"mtime":1612920778957,"results":"59","hashOfConfig":"47"},{"size":4238,"mtime":1613055353717,"results":"60","hashOfConfig":"47"},{"size":2208,"mtime":1613055187808,"results":"61","hashOfConfig":"47"},{"size":7158,"mtime":1613094276192,"results":"62","hashOfConfig":"47"},{"size":2852,"mtime":1613050250758,"results":"63","hashOfConfig":"47"},{"size":6877,"mtime":1613057644157,"results":"64","hashOfConfig":"47"},{"size":1498,"mtime":1612967283920,"results":"65","hashOfConfig":"47"},{"size":770,"mtime":1612967253418,"results":"66","hashOfConfig":"47"},{"size":2086,"mtime":1613094563689,"results":"67","hashOfConfig":"47"},{"size":3650,"mtime":1613011261012,"results":"68","hashOfConfig":"47"},{"size":2663,"mtime":1612967132784,"results":"69","hashOfConfig":"47"},{"size":1254,"mtime":1612967097998,"results":"70","hashOfConfig":"47"},{"size":3938,"mtime":1613094476236,"results":"71","hashOfConfig":"47"},{"size":4443,"mtime":1613093813107,"results":"72","hashOfConfig":"47"},{"size":4132,"mtime":1613057617583,"results":"73","hashOfConfig":"47"},{"size":187,"mtime":1612552132275,"results":"74","hashOfConfig":"47"},{"size":1557,"mtime":1613011223444,"results":"75","hashOfConfig":"47"},{"size":1146,"mtime":1612964220016,"results":"76","hashOfConfig":"47"},{"size":2689,"mtime":1612961386523,"results":"77","hashOfConfig":"47"},{"size":2040,"mtime":1612879289754,"results":"78","hashOfConfig":"47"},{"size":948,"mtime":1612709651976,"results":"79","hashOfConfig":"47"},{"size":362,"mtime":1612709506022,"results":"80","hashOfConfig":"47"},{"size":2303,"mtime":1613068924677,"results":"81","hashOfConfig":"47"},{"size":1491,"mtime":1613094500813,"results":"82","hashOfConfig":"47"},{"size":257,"mtime":1612807727540,"results":"83","hashOfConfig":"47"},{"size":4379,"mtime":1612922982705,"results":"84","hashOfConfig":"47"},{"size":1644,"mtime":1612981531597,"results":"85","hashOfConfig":"47"},{"size":1394,"mtime":1613050343352,"results":"86","hashOfConfig":"47"},{"size":902,"mtime":1613057661129,"results":"87","hashOfConfig":"47"},{"size":951,"mtime":1613068707369,"results":"88","hashOfConfig":"47"},{"size":393,"mtime":1613067805946,"results":"89","hashOfConfig":"47"},{"size":1878,"mtime":1613070171174,"results":"90","hashOfConfig":"47"},{"size":1485,"mtime":1613094535256,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1vfq7fk",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\index.js",[],["193","194"],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\layout.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\header.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\sidebar.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\signUp.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\homepage.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\form.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\input.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\button.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\loader.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\store.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\signIn.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Reducers\\userReducers.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Types\\userTypes.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Actions\\userActions.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\dashboard.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\editProfilePage.js",["195","196","197"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getUserProfilePicture, updateNames } from \"../redux/Actions/userActions\";\r\nimport DefaultPP from \"../images/dpp.png\";\r\nimport Layout from \"../components/layout\";\r\nimport Input from \"../components/input\";\r\nimport Modal from \"../components/modal\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../components/loader\";\r\nimport PaddingWrapper from \"../components/paddingWrapper\";\r\nimport RemoveProfilePictureButton from \"../components/removeProfilePictureButton\";\r\n\r\nexport const CustomInput = styled.input`\r\n  width: 0.1px;\r\n  height: 0.1px;\r\n  opacity: 0;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  z-index: -1;\r\n\r\n  font-size: 1.25em;\r\n  font-weight: 700;\r\n  color: white;\r\n  background-color: black;\r\n  display: inline-block;\r\n\r\n  background-color: red;\r\n  border-bottom: 1px solid, #000;\r\n\r\n  &:focus {\r\n    background-color: red;\r\n  }\r\n`;\r\nexport const CustomLabel = styled.label`\r\n  font-size: 1.25em;\r\n  color: #000;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  padding: 5px 15px;\r\n`;\r\n\r\nconst EditProfilePage = ({ history }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [fileInputState] = useState(\"\");\r\n  const [previewSource, setPreviewSource] = useState(\"\");\r\n  const [inputs, setInputs] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n  });\r\n  const [inputError, setInputError] = useState(\"\");\r\n  const [userLoggedInProfileSrc, setUserLoggedInProfileSrc] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  //if there is a logged in user\r\n  const userLoggedInDetails = useSelector((state) => state.userLoggedInDetails);\r\n  const { loggedInUserDetails } = userLoggedInDetails;\r\n\r\n  const userUpdateProfilePicture = useSelector((state) => state.userUpdateProfilePicture);\r\n  const { loading, error, profilePic } = userUpdateProfilePicture;\r\n\r\n  const userProfilePicture = useSelector((state) => state.userProfilePicture);\r\n  const { profilePic: loggedInUserPP } = userProfilePicture;\r\n\r\n  const userUpdateNames = useSelector((state) => state.userUpdateNames);\r\n  const { success } = userUpdateNames;\r\n\r\n  const userRemoveProfilePicture = useSelector((state) => state.userRemoveProfilePicture);\r\n  const { success: removePPSuccess } = userUpdateNames;\r\n\r\n  const data = useLocation();\r\n  const { state } = data;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      return history.push(\"/login\");\r\n    }\r\n    if (userInfo && !state) {\r\n      return history.push(`/dashboard/${loggedInUserDetails.returnedUsername}`);\r\n    }\r\n  }, [state, history, userInfo, dispatch, loggedInUserDetails]);\r\n  // console.log(profile);\r\n\r\n  useEffect(() => {\r\n    if (loggedInUserDetails) {\r\n      setInputs({\r\n        firstName: loggedInUserDetails.first_name,\r\n        lastName: loggedInUserDetails.last_name,\r\n        username: loggedInUserDetails.username,\r\n      });\r\n    }\r\n  }, [dispatch, profilePic, success, loggedInUserDetails]);\r\n\r\n  useEffect(() => {\r\n    if (loggedInUserDetails) {\r\n      dispatch(getUserProfilePicture(loggedInUserDetails.profilepic));\r\n    }\r\n  }, [dispatch, loggedInUserDetails, removePPSuccess]);\r\n\r\n  // console.log(userInfo);\r\n\r\n  const handleChange = (e) => {\r\n    setInputs((prev) => ({\r\n      ...prev,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    if (inputs.firstName !== \"\" && inputs.lastName !== \"\" && inputs.username !== \"\") {\r\n      dispatch(updateNames(inputs.firstName, inputs.lastName, inputs.username));\r\n      window.location.reload();\r\n      setInputError(\"\");\r\n    } else {\r\n      setInputError(\"Nothing must be blank\");\r\n    }\r\n  };\r\n\r\n  const handleFileInputState = (e) => {\r\n    //grabs the first file\r\n    const file = e.target.files[0];\r\n    previewFile(file);\r\n  };\r\n\r\n  const previewFile = (file) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file); //convers images into a string\r\n    reader.onloadend = () => {\r\n      setPreviewSource(reader.result);\r\n    };\r\n  };\r\n  console.log(userLoggedInProfileSrc);\r\n  return (\r\n    <Layout>\r\n      {loading && <Loader />}\r\n      {error && <h1>{error}</h1>}\r\n      {loggedInUserDetails && (\r\n        <PaddingWrapper>\r\n          <section className=\"px-10 pt-20 flex flex-col \">\r\n            <div className=\"flex items-center gap-5\">\r\n              <img\r\n                src={\r\n                  !previewSource\r\n                    ? loggedInUserDetails.profilepic\r\n                      ? loggedInUserPP\r\n                      : DefaultPP\r\n                    : previewSource\r\n                }\r\n                className=\"w-24 h-24 rounded-full object-cover\"\r\n              />\r\n              <div className=\"flex flex-col gap-4\">\r\n                <h3 className=\"font-bold text-2xl\">{loggedInUserDetails.username}</h3>\r\n\r\n                <Modal imageSrc={previewSource} showModal={showModal} setShowModal={setShowModal}>\r\n                  <CustomInput\r\n                    type=\"file\"\r\n                    name=\"image\"\r\n                    id=\"file\"\r\n                    className=\"inputfile\"\r\n                    onChange={handleFileInputState}\r\n                    value={fileInputState}\r\n                  />\r\n                  <CustomLabel htmlFor=\"file\">Choose a file</CustomLabel>\r\n                  <RemoveProfilePictureButton setShowModal={setShowModal}/>\r\n                </Modal>\r\n                {/* {previewSource && <img className=\"w-64\" src={previewSource} />} */}\r\n              </div>\r\n            </div>\r\n            {inputError && <h2 className=\"text-red-500 mt-8\">{inputError}</h2>}\r\n            {success && <h2 className=\"text-green-500 mt-8\">Profile Updated Successfully</h2>}\r\n            <label htmlFor=\"name\" className=\"mt-10 text-2xl font-bold\">\r\n              First Name\r\n            </label>\r\n            <Input name=\"firstName\" value={inputs.firstName} onChange={handleChange} />\r\n\r\n            <label htmlFor=\"name\" className=\"mt-5 text-2xl font-bold\">\r\n              Last Name\r\n            </label>\r\n            <Input name=\"lastName\" value={inputs.lastName} onChange={handleChange} />\r\n\r\n            <label htmlFor=\"name\" className=\"mt-5 text-2xl font-bold\">\r\n              Username\r\n            </label>\r\n            <Input name=\"username\" value={inputs.username} onChange={handleChange} />\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"bg-gray-800 text-white w-1/2 px-6 py-1 rounded-sm\"\r\n              onClick={handleUpdate}\r\n            >\r\n              Update Username\r\n            </button>\r\n          </section>\r\n        </PaddingWrapper>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default EditProfilePage;\r\n","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Reducers\\followerReducer.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Types\\followerTypes.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Actions\\followersAction.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\upload.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Reducers\\uploadReducer.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Types\\uploadTypes.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Actions\\uploadActions.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\postTemplate.js",["198"],"import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUploadDetails } from \"../redux/Actions/uploadActions\";\r\nimport UploaderProfileBar from \"../components/uploaderProfileBar\";\r\nimport SavePostButton from \"../components/savePostButton\";\r\nimport * as Showdown from \"showdown\";\r\nimport dompurify from \"dompurify\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport PaddingWrapper from \"../components/paddingWrapper\";\r\nimport Loader from \"../components/loader\";\r\nimport ErrorMessage from \"../components/errorMessage\";\r\nimport LikePostButton from \"../components/likePostButton\";\r\n\r\nconst PostTemplate = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const path = location.pathname;\r\n  const uploadIdFromPath = path.substring(6, path.length);\r\n\r\n  //converting markdown from description of upload to html\r\n  const sanitizer = dompurify.sanitize;\r\n  const converter = new Showdown.Converter({\r\n    tables: true,\r\n    simplifiedAutoLink: true,\r\n    strikethrough: true,\r\n    tasklists: true,\r\n  });\r\n\r\n  const [isUserLoginPost, setIsUserLoginPost] = useState(false);\r\n  const [mdToHtml, setMdToHtml] = useState();\r\n\r\n  //if there is a logged in user\r\n  const userLoggedInDetails = useSelector((state) => state.userLoggedInDetails);\r\n  const { loggedInUserDetails } = userLoggedInDetails;\r\n\r\n  const uploadDetails = useSelector((state) => state.uploadDetails);\r\n  const { details, loading, error } = uploadDetails;\r\n\r\n  // console.log(state);\r\n  // console.log(userInfo);\r\n  //check if this is users post\r\n  useEffect(() => {\r\n    if (loggedInUserDetails && details && loggedInUserDetails.user_id === details.uploaded_by) {\r\n      setIsUserLoginPost(true);\r\n    } else {\r\n      setIsUserLoginPost(false);\r\n    }\r\n  }, [loggedInUserDetails, details]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUploadDetails(uploadIdFromPath));\r\n  }, [dispatch, uploadIdFromPath]);\r\n\r\n  //   console.log(userInfo);\r\n  // console.log(details.description);\r\n  useEffect(() => {\r\n    if (details) {\r\n      var html = details && converter.makeHtml(details.description);\r\n      setMdToHtml(html);\r\n    }\r\n  }, [details]);\r\n\r\n  const convertDate = (date) => {\r\n    // return new Date(date).toString().slice(4, 15).replaceAt(6, \", \");\r\n    return new Date(date).toLocaleString().slice(0, 8);\r\n  };\r\n  // details && console.log(isUserLoginPost);\r\n  return (\r\n    <Layout>\r\n      {loading && <Loader />}\r\n      {error && <ErrorMessage>{error}</ErrorMessage>}\r\n      {details && (\r\n        <>\r\n          <PaddingWrapper className=\"px-5 lg:px-72 pt-10 padding-wrapper\">\r\n            {!isUserLoginPost ? (\r\n              <span className=\"flex gap-3 justify-end\">\r\n                <LikePostButton upload_id={details.upload_id} />\r\n                <SavePostButton upload_id={details.upload_id} upload_post={uploadIdFromPath} />\r\n              </span>\r\n            ) : (\r\n              <div className=\"flex items-center gap-3 justify-end\">\r\n                <Link\r\n                  to={`/edit-post/${details.upload_id}`}\r\n                  className=\"px-5 py-0.5 bg-gray-600 rounded-md text-white \"\r\n                >\r\n                  Edit\r\n                </Link>\r\n                <FaTrash className=\"cursor-pointer\" />\r\n              </div>\r\n            )}\r\n          </PaddingWrapper>\r\n          {details && (\r\n            <PaddingWrapper>\r\n              <h2 className=\"text-5xl font-bold my-5\">{details.title}</h2>\r\n              <div className=\"flex items-center gap-5\">\r\n                <UploaderProfileBar uploaded_by={details.uploaded_by} className=\"w-full \" />\r\n                <p className=\"my-4 pb-3 text-gray-400\">{convertDate(details.created_at)}</p>\r\n              </div>\r\n              <img\r\n                src={details.image_url}\r\n                className=\"relative object-cover max-h-screen w-full\"\r\n                alt=\"Visual of the recipe posted.\"\r\n              />\r\n\r\n              <div className=\" md:px-0\">\r\n                <p className=\"mb-5\">{details.caption}</p>\r\n                <div\r\n                  dangerouslySetInnerHTML={{ __html: sanitizer(mdToHtml) }}\r\n                  className=\"post-description text-xl\"\r\n                ></div>\r\n              </div>\r\n            </PaddingWrapper>\r\n          )}\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PostTemplate;\r\n","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\modal.js",["199","200"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { udpateUserProfilePic } from \"../redux/Actions/userActions\";\r\nimport DefaultPP from \"../images/dpp.png\";\r\n\r\nexport default function Modal({ children, imageSrc, setShowModal, showModal }) {\r\n  // const [showModal, setShowModal] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  //user profile pic\r\n  const userProfilePicture = useSelector((state) => state.userProfilePicture);\r\n  const { profilePic } = userProfilePicture;\r\n\r\n  const handleChangeImage = () => {\r\n    if (imageSrc) {\r\n      dispatch(udpateUserProfilePic(imageSrc));\r\n    }\r\n    setShowModal(false);\r\n  };\r\n\r\n  // console.log(imageSrc);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"bg-pink-500 text-white active:bg-pink-600 font-bold uppercase text-sm px-3 py-1.5 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\r\n        type=\"button\"\r\n        style={{ transition: \"all .15s ease\" }}\r\n        onClick={() => setShowModal(true)}\r\n      >\r\n        Change Profile Picture\r\n      </button>\r\n      {showModal ? (\r\n        <>\r\n          <div\r\n            className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n            // onClick={() => setShowModal(false)}\r\n          >\r\n            <div className=\"relative w-3/4 lg:w-1/2 mt-20 mx-auto max-w-3xl\">\r\n              {/*content*/}\r\n              <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n                {/*header*/}\r\n                <div className=\"flex flex-col items-start justify-between px-5 py-2 border-b border-solid border-gray-300 rounded-t\">\r\n                  <h3 className=\"text-3xl font-semibold\">Change Profile Photo</h3>\r\n                  <p className=\"\">\r\n                    You must press save changes before closing otherwise your picture won't be\r\n                    updated.{\" \"}\r\n                  </p>\r\n                  <img\r\n                    src={imageSrc || profilePic || DefaultPP}\r\n                    className=\"w-24 h-24 rounded-full object-cover mx-auto mt-5\"\r\n                  />\r\n                  <button\r\n                    className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n                    onClick={() => setShowModal(false)}\r\n                  >\r\n                    <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\r\n                      ×\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n                {/*body*/}\r\n                <div className=\"relative flex flex-col items-center justify-center gap-5 py-5\">\r\n                  {children}\r\n                </div>\r\n                {/*footer*/}\r\n                <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\r\n                  <button\r\n                    className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\r\n                    type=\"button\"\r\n                    style={{ transition: \"all .15s ease\" }}\r\n                    onClick={() => setShowModal(false)}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button\r\n                    className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\r\n                    type=\"button\"\r\n                    style={{ transition: \"all .15s ease\" }}\r\n                    onClick={handleChangeImage}\r\n                  >\r\n                    Save Changes\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\errorMessage.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\uploaderProfileBar.js",["201"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DfProfile from \"../images/dpp.png\";\r\nconst UploaderProfileBar = ({ uploaded_by, className }) => {\r\n  const [uploaderProfile, setUploaderProfile] = useState({});\r\n\r\n  //get the profile pic and username from post\r\n  const uploadsProfileAndUsername = async (uploaded_by) => {\r\n    try {\r\n      const data = await fetch(\"http://localhost:5000/api/upload/upload-username-profilepic\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ uploaded_by }),\r\n      });\r\n      //returns the array of the random posts\r\n      const parsedData = await data.json();\r\n      return parsedData;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    uploadsProfileAndUsername(uploaded_by).then((res) => setUploaderProfile(res));\r\n  }, [uploaded_by]);\r\n  // console.log(uploaderProfile);\r\n  return (\r\n    <div>\r\n      {uploaded_by && uploaderProfile && (\r\n        <>\r\n          <Link\r\n            to={`/dashboard/${uploaderProfile.username}`}\r\n            className={`flex items-center gap-3 mb-3 lg:p-0 ${className}`}\r\n          >\r\n            <img\r\n              src={uploaderProfile.imageUrl || DfProfile}\r\n              alt=\"poster profile picture\"\r\n              className=\"w-7 h-7 rounded-full object-cover\"\r\n            />\r\n            <p>{uploaderProfile.username}</p>\r\n          </Link>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploaderProfileBar;\r\n","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\followersTab.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\followOrEditCheck.js",["202"],"import React, { useEffect } from \"react\";\r\nimport { FiUserCheck } from \"react-icons/fi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { checkIfUserIsFollowingAlready, followThisUser } from \"../redux/Actions/followersAction\";\r\nimport Loader from \"./loader\";\r\n\r\nconst FollowOrEditCheck = ({ isLoggedInUserProfile, anyUserProfile }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const checkIfFollowing = useSelector((state) => state.checkIfFollowing);\r\n  const { isFollowing } = checkIfFollowing;\r\n\r\n  //if there is a logged in user\r\n  const userLoggedInDetails = useSelector((state) => state.userLoggedInDetails);\r\n  const { loggedInUserDetails } = userLoggedInDetails;\r\n\r\n  //follow a user action.\r\n  const followUser = useSelector((state) => state.follow);\r\n  const { loading: loadFollow, follow, error: followError } = followUser;\r\n\r\n  //check if the user is following\r\n  useEffect(() => {\r\n    if (anyUserProfile && loggedInUserDetails && anyUserProfile !== loggedInUserDetails.user_id) {\r\n      dispatch(checkIfUserIsFollowingAlready(anyUserProfile.user.user_id));\r\n    }\r\n  }, [dispatch, anyUserProfile, follow, loggedInUserDetails]);\r\n\r\n  const followCommand = () => {\r\n    //cannot follow yourself\r\n    if (anyUserProfile.user.user_id !== loggedInUserDetails.user_id) {\r\n      dispatch(followThisUser(anyUserProfile.user.user_id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-10\">\r\n      {anyUserProfile && (\r\n        <>\r\n          {loadFollow && <Loader />}\r\n          {isLoggedInUserProfile && loggedInUserDetails ? (\r\n            <Link\r\n              className=\"bg-gray-500 px-10 rounded text-white py-1 my-5\"\r\n              to={{\r\n                pathname: `/dashboard/${loggedInUserDetails.username}/edit-profile`,\r\n                state: {\r\n                  user: loggedInUserDetails.user_id,\r\n                },\r\n              }}\r\n            >\r\n              Edit Profile\r\n            </Link>\r\n          ) : loggedInUserDetails ? (\r\n            <button\r\n              className={`px-10 rounded text-white py-1 my-5 focus:outline-none w-40 h-8 text-center transition duration-500 ease-in-out block ${\r\n                isFollowing ? \"bg-gray-300\" : \"bg-red-500\"\r\n              }`}\r\n              onClick={followCommand}\r\n            >\r\n              {isFollowing ? <FiUserCheck className=\"mx-auto\" size={16} /> : \"Follow\"}\r\n            </button>\r\n          ) : (\r\n            <Link to=\"/login\" className=\"bg-red-500 px-10 rounded text-white py-1 my-5 block\">\r\n              Login to follow\r\n            </Link>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FollowOrEditCheck;\r\n","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\richTextEditor.js",["203"],"import * as React from \"react\";\r\nimport ReactMde from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\r\nimport { getDefaultToolbarCommands } from \"react-mde\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const RichTextTyper = styled(ReactMde)`\r\n  width: 100%;\r\n`;\r\n\r\nfunction loadSuggestions(text) {\r\n  return new Promise((accept, reject) => {\r\n    setTimeout(() => {\r\n      const suggestions = [\r\n        {\r\n          preview: \"Andre\",\r\n          description: \"@andre\",\r\n        },\r\n        {\r\n          preview: \"Angela\",\r\n          description: \"@angela\",\r\n        },\r\n        {\r\n          preview: \"David\",\r\n          description: \"@david\",\r\n        },\r\n        {\r\n          preview: \"Louise\",\r\n          description: \"@louise\",\r\n        },\r\n      ].filter((i) => i.preview.toLowerCase().includes(text.toLowerCase()));\r\n      accept(suggestions);\r\n    }, 250);\r\n  });\r\n}\r\n\r\nconst converter = new Showdown.Converter({\r\n  tables: true,\r\n  simplifiedAutoLink: true,\r\n  strikethrough: true,\r\n  tasklists: true,\r\n});\r\n\r\nexport default function RichTextEditor({ description, setDescription, className }) {\r\n  const commands = getDefaultToolbarCommands();\r\n  // console.log(commands);\r\n  // const [value, setValue] = React.useState(\"**Hello world!!!**\");\r\n  const [selectedTab, setSelectedTab] = React.useState(\"write\");\r\n  // console.log(description);\r\n\r\n  return (\r\n    <div className={`w-3/4 md:w-1/2 my-3 ${className}`}>\r\n      <RichTextTyper\r\n        id=\"description\"\r\n        value={description}\r\n        toolbarCommands={[[\"header\", \"bold\", \"ordered-list\", \"unordered-list\", \"checked-list\"]]}\r\n        onChange={setDescription}\r\n        selectedTab={selectedTab}\r\n        onTabChange={setSelectedTab}\r\n        generateMarkdownPreview={(markdown) => Promise.resolve(converter.makeHtml(markdown))}\r\n        loadSuggestions={loadSuggestions}\r\n        childProps={{\r\n          writeButton: {\r\n            tabIndex: -1,\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Reducers\\savedUploadsReducer.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Types\\savedUploadTypes.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\savePostButton.js",["204"],"import React, { useEffect, useState } from \"react\";\r\nimport { BsBookmark, BsBookmarkFill } from \"react-icons/bs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { checkIfSavedAlready, saveUpload } from \"../redux/Actions/saveUploadsActions\";\r\nimport Loader from \"../components/loader\";\r\nimport ErrorMessage from \"../components/errorMessage\";\r\n\r\nconst SavePostButton = ({ upload_id }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const saveUploads = useSelector((state) => state.saveUploads);\r\n  const { loading, isSaved, error } = saveUploads;\r\n  const checkIfSaved = useSelector((state) => state.checkIfSaved);\r\n  const { wasSaved, error: checkError } = checkIfSaved;\r\n\r\n  const [savedNumber, setSavedNumber] = useState(0);\r\n\r\n  //get the amount of saves\r\n  const fetchSavedUploadsNumber = async () => {\r\n    const data = await fetch(\r\n      `http://localhost:5000/api/save-uploads/count-amount-saved/${upload_id}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    );\r\n    return data.json();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(checkIfSavedAlready(upload_id));\r\n      const amountOfUsersThatSaved = fetchSavedUploadsNumber();\r\n      amountOfUsersThatSaved.then((res) => {\r\n        setSavedNumber(res);\r\n      });\r\n    }\r\n  }, [dispatch, isSaved, upload_id, userInfo]);\r\n\r\n  const handleSave = () => {\r\n    dispatch(saveUpload(upload_id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      {checkError && <ErrorMessage>{checkError}</ErrorMessage>}\r\n      {error && <ErrorMessage>{error}</ErrorMessage>}\r\n      {!wasSaved ? (\r\n        <>\r\n          <BsBookmark\r\n            size={24}\r\n            onClick={handleSave}\r\n            className=\"cursor-pointer\"\r\n            aria-disabled={!userInfo && \"true\"}\r\n          />\r\n          <p>{savedNumber}</p>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <BsBookmarkFill\r\n            size={24}\r\n            onClick={handleSave}\r\n            className=\"cursor-pointer\"\r\n            aria-disabled={!userInfo && \"true\"}\r\n          />\r\n          <p>{savedNumber}</p>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavePostButton;\r\n","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Actions\\saveUploadsActions.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\paddingWrapper.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\pages\\editUpload.js",["205"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../components/layout\";\r\nimport PaddingWrapper from \"../components/paddingWrapper\";\r\nimport UploaderProfileBar from \"../components/uploaderProfileBar\";\r\nimport { getUploadDetails, updateUpload } from \"../redux/Actions/uploadActions\";\r\n// import * as Showdown from \"showdown\";\r\n// import dompurify from \"dompurify\";\r\nimport RichTextEditor from \"../components/richTextEditor\";\r\nimport ErrorMessage from \"../components/errorMessage\";\r\nimport Button from \"../components/button\";\r\nimport Loader from \"../components/loader\";\r\n\r\nconst EditUpload = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const path = location.pathname;\r\n  const uploadIdFromPath = path.substring(11, path.length);\r\n\r\n  const uploadDetails = useSelector((state) => state.uploadDetails);\r\n  const { details, loading, error } = uploadDetails;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // const sanitizer = dompurify.sanitize;\r\n  // const converter = new Showdown.Converter({\r\n  //   tables: true,\r\n  //   simplifiedAutoLink: true,\r\n  //   strikethrough: true,\r\n  //   tasklists: true,\r\n  // });\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [caption, setCaption] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [updateError, setUpdateError] = useState(\"\");\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(getUploadDetails(uploadIdFromPath));\r\n    }\r\n  }, [dispatch, uploadIdFromPath, userInfo]);\r\n\r\n  useEffect(() => {\r\n    if (details) {\r\n      setDescription(details.description);\r\n      setCaption(details.caption);\r\n      setTitle(details.title);\r\n    }\r\n  }, [details]);\r\n\r\n  //convert markdown to html function\r\n  // const [mdToHtml, setMdToHtml] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   if (details) {\r\n  //     var html = details && converter.makeHtml(details.description);\r\n  //     setMdToHtml(html);\r\n  //   }\r\n  // }, [details]);\r\n\r\n  const convertDate = (date) => {\r\n    // return new Date(date).toString().slice(4, 15).replaceAt(6, \", \");\r\n    return new Date(date).toLocaleString().slice(0, 8);\r\n  };\r\n\r\n  const updateUploadPost = (e) => {\r\n    e.preventDefault();\r\n    if (title !== \"\" && caption !== \"\" && description !== \"\") {\r\n      dispatch(updateUpload(title, caption, description, uploadIdFromPath));\r\n      setUpdateError(\"\");\r\n      window.location.reload();\r\n    } else {\r\n      setUpdateError(\"Title, caption and description cannot be blank.\");\r\n    }\r\n  };\r\n\r\n  // details && console.log(title);\r\n  return (\r\n    <Layout>\r\n      {loading && <Loader />}\r\n      {error && <ErrorMessage>{error}</ErrorMessage>}\r\n      {details && (\r\n        <PaddingWrapper>\r\n          {updateError && <ErrorMessage>{updateError}</ErrorMessage>}\r\n          <form onSubmit={updateUploadPost}>\r\n            <input\r\n              placeholder=\"Title\"\r\n              value={title}\r\n              name=\"title\"\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              className=\"border-none text-3xl w-full\"\r\n            />\r\n            <div className=\"flex items-center gap-5\">\r\n              <UploaderProfileBar uploaded_by={details.uploaded_by} className=\"w-full \" />\r\n              <p className=\"my-4 pb-3 text-gray-400\">{convertDate(details.created_at)}</p>\r\n            </div>\r\n            <img src={details.image_url} className=\"relative object-cover max-h-screen w-full\" />\r\n\r\n            <div className=\" md:px-0\">\r\n              <input\r\n                placeholder=\"caption\"\r\n                name=\"caption\"\r\n                value={caption}\r\n                onChange={(e) => setCaption(e.target.value)}\r\n                className=\"border-none text-xl mt-5 mb-2 w-full\"\r\n              />\r\n              {/* <div\r\n                dangerouslySetInnerHTML={{ __html: sanitizer(mdToHtml) }}\r\n                className=\"post-description text-xl\"\r\n              ></div> */}\r\n            </div>\r\n            <RichTextEditor\r\n              className=\"w-full md:w-full mt-10\"\r\n              description={description}\r\n              setDescription={setDescription}\r\n            />\r\n            <Button type=\"submit\">Update</Button>\r\n          </form>\r\n        </PaddingWrapper>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default EditUpload;\r\n","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\dashboardPosts.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\dashboardProfilePicture.js",["206"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DefaultPP from \"../images/dpp.png\";\r\nimport Loader from \"./loader\";\r\n\r\nconst LoggedInUserProfilePicture = () => {\r\n  const [dashboardUserProfilePicture, setDashboardUserProfilePicture] = useState(\"\");\r\n  const anyUserDetails = useSelector((state) => state.anyUserDetails);\r\n  const { loading, anyUserProfile } = anyUserDetails;\r\n\r\n  const getuserProfileImage = async () => {\r\n    try {\r\n      const data = await fetch(\r\n        `http://localhost:5000/api/users/profile-pic/${anyUserProfile.user.profilepic}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      );\r\n      const parsedData = await data.json();\r\n      setDashboardUserProfilePicture(parsedData);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (anyUserProfile) {\r\n      getuserProfileImage();\r\n    }\r\n  }, [anyUserProfile]);\r\n  // console.log(dashboardUserProfilePicture);\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      <img\r\n        src={dashboardUserProfilePicture || DefaultPP}\r\n        alt=\"user profile thumnail\"\r\n        title=\"profile picture\"\r\n        className=\"rounded-full w-32 h-32 md:h-52 md:w-52 object-cover mb-10\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoggedInUserProfilePicture;\r\n","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\removeProfilePictureButton.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Reducers\\likedUploadsReducer.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Types\\likedUploads.js",[],"C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\components\\likePostButton.js",["207","208","209"],"import React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineHeart, AiFillHeart } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { checkIfLikedAlready, likePost } from \"../redux/Actions/likeUploadAction\";\r\n\r\nconst LikePostButton = ({ upload_id }) => {\r\n  const dispatch = useDispatch();\r\n  const [postLikesCount, setPostLikesCount] = useState(0);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const likeUpload = useSelector((state) => state.likeUpload);\r\n  const { loading, isLiked, error } = likeUpload;\r\n  const checkIfLiked = useSelector((state) => state.checkIfLiked);\r\n  const { wasLiked, error: checkError } = checkIfLiked;\r\n\r\n  //fetch number of likes this post has\r\n\r\n  const fetchSavedUploadsNumber = async (id) => {\r\n    const data = await fetch(`http://localhost:5000/api/like-uploads/count-amount-saved/${id}`, {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return data.json();\r\n  };\r\n\r\n  //check how loggedInUser liked it already for the start\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(checkIfLikedAlready(upload_id));\r\n      const amountLiked = fetchSavedUploadsNumber(upload_id);\r\n      amountLiked.then((res) => {\r\n        setPostLikesCount(res);\r\n      });\r\n    }\r\n  }, [dispatch, isLiked, upload_id, userInfo]);\r\n  console.log(postLikesCount);\r\n  const handleLikingTheUpload = () => {\r\n    dispatch(likePost(upload_id));\r\n  };\r\n  return (\r\n    <div className=\"flex gap-5\">\r\n      {!wasLiked ? (\r\n        <AiOutlineHeart size={24} onClick={handleLikingTheUpload} className=\"cursor-pointer\" />\r\n      ) : (\r\n        <AiFillHeart size={24} onClick={handleLikingTheUpload} className=\"cursor-pointer\" />\r\n      )}\r\n      {postLikesCount}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LikePostButton;\r\n","C:\\Users\\HP\\Desktop\\Pern Stack Apps\\cookbook-sharing-app\\client\\src\\redux\\Actions\\likeUploadAction.js",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":53,"column":34,"nodeType":"216","messageId":"217","endLine":53,"endColumn":59},{"ruleId":"214","severity":1,"message":"218","line":72,"column":9,"nodeType":"216","messageId":"217","endLine":72,"endColumn":33},{"ruleId":"219","severity":1,"message":"220","line":145,"column":15,"nodeType":"221","endLine":154,"endColumn":17},{"ruleId":"222","severity":1,"message":"223","line":62,"column":6,"nodeType":"224","endLine":62,"endColumn":15,"suggestions":"225"},{"ruleId":"214","severity":1,"message":"226","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"219","severity":1,"message":"220","line":49,"column":19,"nodeType":"221","endLine":52,"endColumn":21},{"ruleId":"227","severity":1,"message":"228","line":34,"column":13,"nodeType":"221","endLine":38,"endColumn":15},{"ruleId":"214","severity":1,"message":"229","line":20,"column":47,"nodeType":"216","messageId":"217","endLine":20,"endColumn":58},{"ruleId":"214","severity":1,"message":"230","line":46,"column":9,"nodeType":"216","messageId":"217","endLine":46,"endColumn":17},{"ruleId":"222","severity":1,"message":"231","line":40,"column":6,"nodeType":"224","endLine":40,"endColumn":46,"suggestions":"232"},{"ruleId":"219","severity":1,"message":"220","line":96,"column":13,"nodeType":"221","endLine":96,"endColumn":98},{"ruleId":"222","severity":1,"message":"233","line":31,"column":6,"nodeType":"224","endLine":31,"endColumn":22,"suggestions":"234"},{"ruleId":"214","severity":1,"message":"235","line":13,"column":11,"nodeType":"216","messageId":"217","endLine":13,"endColumn":18},{"ruleId":"214","severity":1,"message":"236","line":13,"column":29,"nodeType":"216","messageId":"217","endLine":13,"endColumn":34},{"ruleId":"214","severity":1,"message":"237","line":15,"column":28,"nodeType":"216","messageId":"217","endLine":15,"endColumn":38},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"no-unused-vars","'setUserLoggedInProfileSrc' is assigned a value but never used.","Identifier","unusedVar","'userRemoveProfilePicture' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'converter'. Either include it or remove the dependency array.","ArrayExpression",["240"],"'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'followError' is assigned a value but never used.","'commands' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSavedUploadsNumber'. Either include it or remove the dependency array.",["241"],"React Hook useEffect has a missing dependency: 'getuserProfileImage'. Either include it or remove the dependency array.",["242"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'checkError' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [converter, details]",{"range":"249","text":"250"},"Update the dependencies array to be: [dispatch, fetchSavedUploadsNumber, isSaved, upload_id, userInfo]",{"range":"251","text":"252"},"Update the dependencies array to be: [anyUserProfile, getuserProfileImage]",{"range":"253","text":"254"},[2242,2251],"[converter, details]",[1428,1468],"[dispatch, fetchSavedUploadsNumber, isSaved, upload_id, userInfo]",[983,999],"[anyUserProfile, getuserProfileImage]"]